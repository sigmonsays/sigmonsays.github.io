<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on sigmonsays</title>
    <link>http://sigmonsays.github.io/notes/</link>
    <description>Recent content in Notes on sigmonsays</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Oct 2016 14:27:30 -0700</lastBuildDate>
    <atom:link href="http://sigmonsays.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bunny</title>
      <link>http://sigmonsays.github.io/notes/bunny/</link>
      <pubDate>Mon, 17 Oct 2016 14:27:30 -0700</pubDate>
      <guid>http://sigmonsays.github.io/notes/bunny/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>interesting tech</title>
      <link>http://sigmonsays.github.io/notes/interesting-tech/</link>
      <pubDate>Sun, 16 Oct 2016 14:50:29 -0700</pubDate>
      <guid>http://sigmonsays.github.io/notes/interesting-tech/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#aug-2024&#34;&gt;Aug 2024&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#feb-2019&#34;&gt;Feb 2019&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#jan-2018&#34;&gt;Jan 2018&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#oct-2016&#34;&gt;Oct 2016&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#hitless-haproxy-reload&#34;&gt;hitless haproxy reload&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#go-jira&#34;&gt;go jira&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#http2-keylog&#34;&gt;http2 keylog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#xo&#34;&gt;xo&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#teleport&#34;&gt;teleport&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#sftp-server-library-in-go&#34;&gt;sftp server library in go&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#toasteroid&#34;&gt;toasteroid&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#httpcache&#34;&gt;httpcache&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#feb-2016&#34;&gt;Feb 2016&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#jan-2016&#34;&gt;Jan 2016&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#nov-2015&#34;&gt;Nov 2015&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#jan-2015&#34;&gt;Jan 2015&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h1 id=&#34;aug-2024&#34;&gt;Aug 2024&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;process-compose - docker-compose but for processes&#xA;see &lt;a href=&#34;https://github.com/F1bonacc1/process-compose&#34;&gt;https://github.com/F1bonacc1/process-compose&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;feb-2019&#34;&gt;Feb 2019&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Link&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://landscape.cncf.io/&#34;&gt;https://landscape.cncf.io/&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;the CNCF landscape makes me want to cry&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;jan-2018&#34;&gt;Jan 2018&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Link&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/lewish/asciiflow2&#34;&gt;https://github.com/lewish/asciiflow2&lt;/a&gt; and &lt;a href=&#34;http://asciiflow.com/&#34;&gt;http://asciiflow.com/&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ascii art draw tool.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/benhoyt/goawk&#34;&gt;https://github.com/benhoyt/goawk&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;awk fully implemented in go and passes &amp;rsquo;the awk test&#39;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;oct-2016&#34;&gt;Oct 2016&lt;/h1&gt;&#xA;&lt;p&gt;gmx - similar to jmx but for go&#xA;&lt;a href=&#34;https://github.com/davecheney/gmx&#34;&gt;https://github.com/davecheney/gmx&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>firewall</title>
      <link>http://sigmonsays.github.io/notes/firewall/</link>
      <pubDate>Fri, 12 Sep 2014 09:38:41 -0700</pubDate>
      <guid>http://sigmonsays.github.io/notes/firewall/</guid>
      <description>&lt;p&gt;Just a nasty little adhoc firewall script I use to quickly secure a box for any ports it has open.&lt;/p&gt;&#xA;&lt;p&gt;Only specific networks are allowed.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/bin/bash&#xA;#set -x&#xA;&#xA;iptables -P INPUT ACCEPT&#xA;iptables -P FORWARD ACCEPT&#xA;iptables -P OUTPUT ACCEPT&#xA;&#xA;iptables -F INPUT &#xA;#iptables -F FORWARD &#xA;#iptables -F OUTPUT &#xA;&#xA;function clean_networks {&#xA;   grep -v ^# | awk &amp;#39;{print $1}&amp;#39; |grep -v ^$&#xA;}&#xA;&#xA;# Quick and dirty iptables firewall&#xA;# We want to drop traffic for any open port if its not in the allowed list of IP addresses&#xA;# &#xA;function list_allowed_networks {&#xA;&#xA;# the 1918 subnets&#xA;cat &amp;lt;&amp;lt; EOF | clean_networks&#xA;10.0.0.0/8&#xA;172.16.0.0/12&#xA;192.168.0.0/16&#xA;EOF&#xA;&#xA;cat &amp;lt;&amp;lt; EOF | clean_networks&#xA;10.0.0.0/8&#xA;127.0.0.0/8&#xA;EOF&#xA;}&#xA;&#xA;function list_open_ports {&#xA;&#x9;# ipv4&#xA;&#x9;netstat -lntu |awk &amp;#39;/^tcp / {print $4}&amp;#39; |awk -F: &amp;#39;{print $2}&amp;#39;&#xA;&#x9;# ipv6&#xA;&#x9;netstat -lntu |awk &amp;#39;/^tcp6 / {print $4}&amp;#39; |awk -F: &amp;#39;{print $4}&amp;#39;&#xA;}&#xA;function list_ports {&#xA;&#x9;list_open_ports&#xA;&#x9;echo 22&#xA;}&#xA;function list_networks {&#xA;&#x9;for N in $(list_allowed_networks)&#xA;&#x9;do&#xA;&#x9;&#x9;echo $N&#xA;&#x9;done&#xA;&#x9;if [ -f /etc/firewall/networks.list ] ; then&#xA;&#x9;&#x9;cat /etc/firewall/networks.list&#xA;&#x9;fi&#xA;&#xA;&#x9;# All local addresses&#xA;&#x9;ip addr | awk -F&amp;#39;[ /]+&amp;#39; &amp;#39;/inet / {print $3}&amp;#39;&#xA;&#xA;&#x9;# Let all your connected subnets in..&#xA;&#x9;# ip addr | awk  &amp;#39;/inet / {print $2}&amp;#39;&#xA;}&#xA;&#xA;function prepare_iptables {&#xA;&#xA;&#x9;# Create drop logged chain&#xA;&#x9;if ! iptables -L drop_logged &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ; then&#xA;&#x9;&#x9;iptables -N drop_logged&#xA;&#x9;fi&#xA;&#x9;iptables -F drop_logged&#xA;&#x9;iptables -A drop_logged -j LOG --log-prefix &amp;#34;iptables-dropped: &amp;#34; --log-level 4&#xA;&#x9;iptables -A drop_logged -j DROP&#xA;}&#xA;&#xA;&#xA;&#xA;#&#xA;# Begin building the firewall&#xA;#&#xA;prepare_iptables&#xA;&#xA;list_networks | while read N&#xA;do&#xA;&#x9;echo &amp;#34;netowrk $N&amp;#34;&#xA;        iptables -A INPUT -s $N -j ACCEPT&#xA;done&#xA;&#xA;list_ports | while read P&#xA;do&#xA;&#x9;echo &amp;#34;securing port $P&amp;#34;&#xA;        iptables -A INPUT -p tcp --dport $P -j drop_logged&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
