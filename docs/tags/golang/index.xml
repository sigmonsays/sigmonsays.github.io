<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on sigmonsays</title>
    <link>http://sigmonsays.github.io/tags/golang/</link>
    <description>Recent content in Golang on sigmonsays</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Nov 2017 10:27:27 -0800</lastBuildDate>
    <atom:link href="http://sigmonsays.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>why use the go programming language?</title>
      <link>http://sigmonsays.github.io/post/why-go/</link>
      <pubDate>Thu, 16 Nov 2017 10:27:27 -0800</pubDate>
      <guid>http://sigmonsays.github.io/post/why-go/</guid>
      <description>I have been a go programmer before go 1.0 was released, I think that brings me back to beginning writing go code around 2011. as en exercise I wrote a simple daemon to handle some backend work where concurrency was key and have enjoyed developing it for quite some time. It replaced a python process where many actors needed to operate on a workqueue. This daemon is actually still in produciton today =P</description>
    </item>
    <item>
      <title>git-watch</title>
      <link>http://sigmonsays.github.io/post/git-watch/</link>
      <pubDate>Sun, 03 Jan 2016 21:33:07 -0800</pubDate>
      <guid>http://sigmonsays.github.io/post/git-watch/</guid>
      <description>git watch is a simple library and CLI tool for monitoring git repositories and triggering events (restart process) when they change.&#xA;git watch [1] was designed as a way to easily build and deploy daemons in development when upstream changes. The changes can be either code (in git) or configuration.&#xA;So here is a simple example which will automatically rebuild and restart a application when you git push (https://github.com/sigmonsays/git-watch/tree/master/examples/go)&#xA;Below in git-watch.</description>
    </item>
    <item>
      <title>go powered databases</title>
      <link>http://sigmonsays.github.io/post/go-powered-databases/</link>
      <pubDate>Sat, 29 Nov 2014 10:45:05 -0800</pubDate>
      <guid>http://sigmonsays.github.io/post/go-powered-databases/</guid>
      <description>bolt - https://github.com/boltdb/bolt ledis - http://ledisdb.com/ tiedot - https://github.com/HouzuoGuo/tiedot cockroachdb - https://github.com/cockroachdb/cockroach bolt pure go key-value datastore&#xA;ledis redis like database written in go&#xA;attractive to embed redis like features directly into your application which will reduce operational complexity.&#xA;tiedot JSON document database&#xA;cockrochdb A Scalable, Geo-Replicated, Transactional Datastore&#xA;design document https://docs.google.com/document/d/11k2EmhLGSbViBvi6_zFEiKzuXxYF49ZuuDJLe6O8gBU/edit&#xA;feature summary&#xA;ACID transactional semantics versioned values primary design goal is consistency and survivability aims to tolerate disk, server, rack and datacenter failures related technologies</description>
    </item>
  </channel>
</rss>
