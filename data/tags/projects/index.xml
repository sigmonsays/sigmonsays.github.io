<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>projects on sig</title>
    <link>https://sigmonsays.github.io/tags/projects/</link>
    <description>Recent content in projects on sig</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 06 Dec 2017 13:01:02 -0700</lastBuildDate>
    
	<atom:link href="https://sigmonsays.github.io/tags/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>screenshot</title>
      <link>https://sigmonsays.github.io/screenshot/</link>
      <pubDate>Wed, 06 Dec 2017 13:01:02 -0700</pubDate>
      
      <guid>https://sigmonsays.github.io/screenshot/</guid>
      <description>Screenshot is a simple python script that has evolved over time. It started out as a shell script which called import -window root screenshot.png and has evolved into a full featured application.
Github page - https://github.com/sigmonsays/screenshot/blob/master/README.md
The point of this post is to demonstrate how to setup screenshot and how to use it to achieve a few things
Installation
git clone https://github.com/sigmonsays/screenshot.git sudo apt-get install -y xclip imagemagick cd screenshot sudo pip install .</description>
    </item>
    
    <item>
      <title>paste, an hour long project</title>
      <link>https://sigmonsays.github.io/2016/01/paste-an-hour-long-project/</link>
      <pubDate>Sun, 31 Jan 2016 10:58:55 -0800</pubDate>
      
      <guid>https://sigmonsays.github.io/2016/01/paste-an-hour-long-project/</guid>
      <description>I&amp;rsquo;m sure anyone who has been on IRC or any type of chat understands the concept of a no paste service.
It has always been bothersome to me that any paste, or &amp;ldquo;no paste&amp;rdquo; command line client has to be needlessly complex. Some i&amp;rsquo;ve tried to use in the past have required installing ruby gems which I despise. So to scratch an itch, I wrote my very own which requires nothing more than curl.</description>
    </item>
    
    <item>
      <title>git-watch</title>
      <link>https://sigmonsays.github.io/2016/01/git-watch/</link>
      <pubDate>Sun, 03 Jan 2016 21:33:07 -0800</pubDate>
      
      <guid>https://sigmonsays.github.io/2016/01/git-watch/</guid>
      <description>git watch is a simple library and CLI tool for monitoring git repositories and triggering events (restart process) when they change.
git watch [1] was designed as a way to easily build and deploy daemons in development when upstream changes. The changes can be either code (in git) or configuration.
So here is a simple example which will automatically rebuild and restart a application when you git push (https://github.com/sigmonsays/git-watch/tree/master/examples/go)
Below in git-watch.</description>
    </item>
    
  </channel>
</rss>